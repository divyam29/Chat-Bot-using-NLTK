# -*- coding: utf-8 -*-
"""ChatBot-using-NLTK

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qbNh5c6kYCnPQinuwF5upkkrw0FgXlPV
"""

import numpy as np
import nltk
import string
import random

"""Loading the text corpus

"""

f = open('content/data.txt','r',errors='ignore')
raw_doc=f.read()

"""punkt, wordnet, and omw-1.4 are nltk libraries used for tokenizing, stemming and lematization of the text corpus

"""

raw_doc=raw_doc.lower()
nltk.download('punkt')
nltk.download('wordnet')
nltk.download('omw-1.4')

"""Here preprocessing of text starts.

first we create sentence tokens and word tokens.

ie Tokenization done 
"""

sentence_tokens = nltk.sent_tokenize(raw_doc)
word_tokens = nltk.word_tokenize(raw_doc)

"""Now using nltk library lematization is done.

Then all the punctuations are removed.

"""

lemmer = nltk.stem.WordNetLemmatizer()

def LemTokens(tokens):
  return [lemmer.lemmatize(token) for token in tokens]

remove_punc_dict = dict((ord(punct),None) for punct in string.punctuation)

def LemNormalize(text):
  return LemTokens(nltk.word_tokenize(text.lower().translate(remove_punc_dict)))

#greet_inputs = ("Hi there!", "Hello!", "Hey!", "Good morning!", "Good afternoon!", "Good evening!", "How are you doing?", "What's up?", "Greetings!", "Salutations!", "Hi, how can I assist you today?", "Yo!", "Hiya!", "Hey, how's it going?", "Nice to meet you!", "Hi, is there anything I can help you with?", "Hey, long time no see!", "Hi, what brings you here?", "Hello, how's your day going?", "Hi, how may I be of service?", "G'day mate!", "Hi, nice to have you here!", "Well, hello there!", "Hey, what's happening?", "Hi, how's life treating you?", "Hello, ready for a chat?", "Hey, how's the weather today?", "Hi, how can I make your day better?", "Good to see you!", "Hi, what's on your mind?", "Hey, how can I assist you today?", "Hello, what can I do for you?", "Hi, how's everything going?", "Hey, anything I can help you with?", "Hello, how may I be of assistance?", "Hi, how's your day been so far?", "Hey, how's life treating you?", "Greetings, ready for a conversation?", "Hi, how can I make your day brighter?", "Hello, nice to see you here!", "Hey, how's your week going?", "Hi, how can I be of help to you?", "Good to have you here!", "Hello, what brings you to this chat?", "Hey, anything exciting happening?", "Hi, how's the world treating you?", "Hello, what can I do to assist you?", "Hi, how are you today?", "Hey, how's your day shaping up?", "Greetings, how may I assist you today?")
greet_inputs=('hi', 'hey', 'yo', 'sup', 'howdy', 'wassup', 'oi')

greet_responses = ("Hi, how can I help you today?", "Hello, how can I assist you?", "Hey there, what can I do for you?", "Good morning! How may I assist you?", "Good afternoon! How can I help you?", "Good evening! How may I assist you today?", "I'm doing great, thank you! How about you?", "Not much, just here to assist you. How can I help?", "I'm here to help. What's on your mind?", "Sure, I'm here to assist you. How can I help?", "Hello! How may I be of service to you?", "Hey! I'm here to help. What do you need assistance with?", "Hi there! How can I assist you today?", "Hello! How can I make your day better?", "Hey! How can I assist you today?", "Hi! How may I be of help to you?", "Hello! How can I make your experience better?", "Hey there! What can I do for you?", "Hi! How can I assist you today?", "Hello! How may I be of service to you?", "Hey! What can I help you with?", "Hi! How can I make your day better?", "Hello! How can I assist you today?", "Hey there! How may I be of help to you?", "Hi! What brings you here?", "Hello! How can I make your experience better?", "Hey! How can I assist you today?", "Hi! How may I be of service to you?", "Hello! What can I do for you?", "Hey! How can I help you today?", "Hi! How can I make your day better?", "Hello! How can I assist you today?", "Hey there! How may I be of help to you?", "Hi! What brings you here?", "Hello! How can I make your experience better?", "Hey! How can I assist you today?", "Hi! How may I be of service to you?", "Hello! What can I do for you?", "Hey! How can I help you today?", "Hi! How can I make your day better?", "Hello! How can I assist you today?", "Hey there! How may I be of help to you?", "Hi! What brings you here?", "Hello! How can I make your experience better?", "Hey! How can I assist you today?", "Hi! How may I be of service to you?", "Hello! What can I do for you?", "Hey! How can I help you today?", "Hi! How can I make your day better?", "Hello! How can I assist you today?", "Hey there! How may I be of help to you?")

def greet(sentence):
  for word in sentence.split():
    if word.lower() in greet_inputs: 
      return random.choice(greet_responses)

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

def response(user_response):
  robo1_response = ""
  TfidVec = TfidfVectorizer(tokenizer = LemNormalize, stop_words = 'english')
  tfidf = TfidVec.fit_transform(sentence_tokens)
  vals = cosine_similarity(tfidf[-1], tfidf)
  idx = vals.argsort()[0][-2]
  flat = vals.flatten()
  flat.sort()
  req_tfidf = flat[-2]
  
  if(req_tfidf == 0):
    robo1_response = robo1_response + "I am sorry. Unable to understand you!"
    return robo1_response
    
  else:
    robo1_response = robo1_response + sentence_tokens[idx]
    return robo1_response

flag = True
print("Bot: Welcome to the chatbot! I'm here to assist you with any questions or tasks you have. How can I help you today?")

while(flag == True):
  user_response = input()
  user_response = user_response.lower()
  
  if(user_response != 'bye'):
    if(user_response == "thank you!" or user_response == "thanks a lot!" or user_response == "thank you so much!" or user_response == "appreciate it!" or user_response == "thanks!" or user_response == "thank you for your help!" or user_response == "thank you very much!" or user_response == "thanks for your assistance!" or user_response == "thanks for being here!" or user_response == "thank you, you're amazing!"):
      flag=False
      print("Bot: You are welcome...")

    else:
      if(greet(user_response) != None):
        print("Bot: " + greet(user_response))

      else:
        sentence_tokens.append(user_response)
        # word_tokens = word_tokens + nltk.word_tokenize(user_response)
        # final_words = list(set(word_tokens))
        print("Bot: ", end = '')
        print(response(user_response))
        sentence_tokens.remove(user_response)
  else: 
    flag = False
    print("Bot: Goodbye!")